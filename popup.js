// Popup script –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏

class PopupController {
  constructor() {
    this.settings = {};
    this.updateInterval = null;
    this.initializeElements();
    this.loadSettings();
    this.setupEventListeners();
    this.startStatsUpdater();
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
  initializeElements() {
    this.botTokenInput = document.getElementById('botToken');
    this.chatIdInput = document.getElementById('chatId');
    // refreshIntervalSelect —É–¥–∞–ª–µ–Ω –∏–∑ UI, –Ω–æ –ª–æ–≥–∏–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è
    this.startBtn = document.getElementById('startBtn');
    this.stopBtn = document.getElementById('stopBtn');
    this.testTelegramBtn = document.getElementById('testTelegramBtn');
    this.statusDiv = document.getElementById('status');
    this.statsDiv = document.getElementById('stats');
    // trackedTabsSpan —É–¥–∞–ª–µ–Ω –∏–∑ UI, –Ω–æ –ª–æ–≥–∏–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è
    this.cachedItemsSpan = document.getElementById('cachedItems');
    this.telegramMessagesSpan = document.getElementById('telegramMessages');
    this.lastUpdateSpan = document.getElementById('lastUpdate');
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  async loadSettings() {
    try {
      const response = await browser.runtime.sendMessage({ action: 'getSettings' });
      this.settings = response.settings || {};
      
      console.log('Popup: –ó–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
      console.log('Popup: –ò–Ω—Ç–µ—Ä–≤–∞–ª –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', this.settings.refreshInterval);
      
      // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
      this.botTokenInput.value = this.settings.telegramBotToken || '';
      this.chatIdInput.value = this.settings.telegramChatId || '';
      // refreshIntervalSelect —É–¥–∞–ª–µ–Ω –∏–∑ UI, –Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ –∫–æ–¥–µ
      
      console.log('Popup: –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—Å–∫—Ä—ã—Ç):', this.settings.refreshInterval || 5);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      this.updateStats();
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
      this.updateButtonStates();
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      this.showStatus('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫', 'error');
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  async saveSettings() {
    this.settings = {
      ...this.settings,
      telegramBotToken: this.botTokenInput.value.trim(),
      telegramChatId: this.chatIdInput.value.trim(),
      refreshInterval: this.settings.refreshInterval || 5, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      isEnabled: this.settings.isEnabled || false
    };

    console.log('Popup: –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
    console.log('Popup: –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—Å–∫—Ä—ã—Ç):', this.settings.refreshInterval, '–º–∏–Ω—É—Ç');

    try {
      await browser.runtime.sendMessage({
        action: 'saveSettings',
        settings: this.settings
      });
      
      console.log('Popup: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
      this.showStatus('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', 'success');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      this.showStatus('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫', 'error');
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
  setupEventListeners() {
    this.startBtn.addEventListener('click', () => this.startTracking());
    this.stopBtn.addEventListener('click', () => this.stopTracking());
    this.testTelegramBtn.addEventListener('click', () => this.testTelegramMessage());
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–∫—Ä—ã—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    const intervalButtons = document.querySelectorAll('[data-interval]');
    intervalButtons.forEach(button => {
      button.addEventListener('click', () => {
        const interval = parseInt(button.dataset.interval);
        this.setRefreshInterval(interval);
      });
    });
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–µ–π
    [this.botTokenInput, this.chatIdInput].forEach(element => {
      element.addEventListener('change', () => {
        console.log('Popup: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—è:', element.id, '–Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', element.value);
        this.saveSettings();
      });
      element.addEventListener('input', () => {
        console.log('Popup: –í–≤–æ–¥ –≤ –ø–æ–ª–µ:', element.id, '–Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', element.value);
        this.saveSettings();
      });
    });
  }

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  async setRefreshInterval(interval) {
    console.log('Popup: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', interval, '–º–∏–Ω—É—Ç');
    this.settings.refreshInterval = interval;
    await this.saveSettings();
    this.showStatus(`–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${interval} –º–∏–Ω—É—Ç`, 'info');
  }

  // –ó–∞–ø—É—Å–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
  async startTracking() {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!this.botTokenInput.value.trim()) {
      this.showStatus('–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞', 'error');
      return;
    }
    
    if (!this.chatIdInput.value.trim()) {
      this.showStatus('–í–≤–µ–¥–∏—Ç–µ ID —á–∞—Ç–∞', 'error');
      return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    await this.saveSettings();
    
    // –í–∫–ª—é—á–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
    this.settings.isEnabled = true;
    await this.saveSettings();
    
    console.log('Popup: –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º:', this.settings.refreshInterval, '–º–∏–Ω—É—Ç');

    try {
      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
      const tabs = await browser.tabs.query({ active: true, currentWindow: true });
      if (tabs.length === 0) {
        this.showStatus('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏', 'error');
        return;
      }

      const activeTab = tabs[0];
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Avito
      if (!activeTab.url.includes('avito.ru')) {
        this.showStatus('–û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É Avito –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è', 'error');
        return;
      }

      // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
      await browser.runtime.sendMessage({
        action: 'startTracking',
        tabId: activeTab.id
      });

      this.showStatus('–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!', 'success');
      this.updateButtonStates();
      this.updateStats(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ä–∞–∑—É
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:', error);
      this.showStatus('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è', 'error');
    }
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
  async stopTracking() {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
      const tabs = await browser.tabs.query({ active: true, currentWindow: true });
      if (tabs.length > 0) {
        await browser.runtime.sendMessage({
          action: 'stopTracking',
          tabId: tabs[0].id
        });
      }

      // –û—Ç–∫–ª—é—á–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
      this.settings.isEnabled = false;
      await this.saveSettings();

      this.showStatus('–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ', 'info');
      this.updateButtonStates();
      this.updateStats(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ä–∞–∑—É
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:', error);
      this.showStatus('–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è', 'error');
    }
  }


  // –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
  async testTelegramMessage() {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
      if (!this.settings.telegramBotToken || !this.settings.telegramChatId) {
        this.showStatus('–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram', 'error');
        return;
      }

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏
      this.showStatus('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...', 'info');
      this.testTelegramBtn.disabled = true;
      this.testTelegramBtn.textContent = '‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞...';

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ background script
      const response = await browser.runtime.sendMessage({
        action: 'testTelegramMessage'
      });

      if (response.success) {
        this.showStatus('–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!', 'success');
        console.log('Popup: –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
        this.updateStats(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      } else {
        this.showStatus(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${response.error}`, 'error');
        console.error('Popup: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', response.error);
      }
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
      this.showStatus('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏', 'error');
    } finally {
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
      this.testTelegramBtn.disabled = false;
      this.testTelegramBtn.textContent = 'üì§ –¢–µ—Å—Ç Telegram';
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫
  updateButtonStates() {
    if (this.settings.isEnabled) {
      this.startBtn.disabled = true;
      this.startBtn.textContent = 'üîÑ –ê–∫—Ç–∏–≤–Ω–æ';
      this.stopBtn.disabled = false;
    } else {
      this.startBtn.disabled = false;
      this.startBtn.textContent = '‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å';
      this.stopBtn.disabled = true;
    }
  }

  // –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞
  showStatus(message, type = 'info') {
    this.statusDiv.textContent = message;
    this.statusDiv.className = `status ${type}`;
    this.statusDiv.style.display = 'block';
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      this.statusDiv.style.display = 'none';
    }, 3000);
  }

  // –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  startStatsUpdater() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ä–∞–∑—É
    this.updateStats();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
    this.updateInterval = setInterval(() => {
      this.updateStats();
    }, 20000);
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  stopStatsUpdater() {
    if (this.updateInterval) {
      clearInterval(this.updateInterval);
      this.updateInterval = null;
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  async updateStats() {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      const response = await browser.runtime.sendMessage({ action: 'getSettings' });
      const currentSettings = response.settings || {};
      
      console.log('Popup: –ü–æ–ª—É—á–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', currentSettings);
      console.log('Popup: trackedTabs:', currentSettings.trackedTabs);
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –≤–∫–ª–∞–¥–æ–∫ (–ª–æ–≥–∏–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è, –Ω–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è)
      const trackedTabs = currentSettings.trackedTabs ? 
        Object.keys(currentSettings.trackedTabs).length : 0;
      
      console.log('Popup: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –≤–∫–ª–∞–¥–æ–∫ (—Å–∫—Ä—ã—Ç–æ):', trackedTabs);
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–µ—à–µ
      const result = await browser.storage.local.get(['cachedItems']);
      const cachedItems = result.cachedItems ? 
        Object.keys(result.cachedItems).length : 0;
      
      console.log('Popup: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–µ—à–µ:', cachedItems);
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
      const telegramMessages = currentSettings.telegramMessagesSent || 0;
      console.log('Popup: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram:', telegramMessages);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π (—Ç–æ–ª—å–∫–æ –≤–∏–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã)
      this.updateCounter(this.cachedItemsSpan, cachedItems);
      this.updateCounter(this.telegramMessagesSpan, telegramMessages);
      this.lastUpdateSpan.textContent = new Date().toLocaleTimeString();
      
      this.statsDiv.style.display = 'block';
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    }
  }

  // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
  updateCounter(element, newValue) {
    const currentValue = parseInt(element.textContent) || 0;
    if (currentValue !== newValue) {
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
      element.classList.add('updated');
      element.textContent = newValue;
      
      // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ 300ms
      setTimeout(() => {
        element.classList.remove('updated');
      }, 300);
    } else {
      element.textContent = newValue;
    }
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
let popupController;

document.addEventListener('DOMContentLoaded', () => {
  popupController = new PopupController();
});

// –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ popup
window.addEventListener('beforeunload', () => {
  if (popupController) {
    popupController.stopStatsUpdater();
  }
});
